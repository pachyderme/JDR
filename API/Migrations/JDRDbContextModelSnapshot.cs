// <auto-generated />
using System;
using API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(JDRDbContext))]
    partial class JDRDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int?>("ScenarioId");

                    b.HasKey("Id");

                    b.HasIndex("ScenarioId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Initials = "LU",
                            Name = "Luna"
                        },
                        new
                        {
                            Id = 2,
                            Initials = "WR",
                            Name = "Wrax"
                        },
                        new
                        {
                            Id = 3,
                            Initials = "DC",
                            Name = "Dicham"
                        },
                        new
                        {
                            Id = 4,
                            Initials = "RA",
                            Name = "Rakar"
                        },
                        new
                        {
                            Id = 5,
                            Initials = "SA",
                            Name = "Saud'ho"
                        },
                        new
                        {
                            Id = 6,
                            Initials = "XA",
                            Name = "Xavro"
                        });
                });

            modelBuilder.Entity("API.Entities.Scenario.Scenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Goal")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("TemplateId");

                    b.Property<int>("UniverseId");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.HasIndex("UniverseId");

                    b.ToTable("Scenarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2020, 5, 12, 12, 48, 46, 2, DateTimeKind.Local).AddTicks(9777),
                            Goal = "Les personnages devront tenter de survivre le plus longtemps possible à diverses aventures au sein de l'inquisition.",
                            LastUpdateDate = new DateTime(2020, 5, 17, 12, 48, 46, 4, DateTimeKind.Local).AddTicks(9197),
                            Name = "Dark Heresy",
                            Summary = "Voici le résumé du scénario de Warhammer Dark Heresy...",
                            TemplateId = 4,
                            UniverseId = 8
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2020, 5, 17, 12, 48, 46, 5, DateTimeKind.Local).AddTicks(3686),
                            Goal = "Révéler certaines vérités et participer aux dénouements de l'époque de près ou de loin.",
                            LastUpdateDate = new DateTime(2020, 5, 20, 12, 48, 46, 5, DateTimeKind.Local).AddTicks(3695),
                            Name = "SW - Le destin d'une galaxie",
                            Summary = "-4000 ans avant la bataille de Yavin 4 et la chute de l'étoile noire, Exar Kun...",
                            TemplateId = 3,
                            UniverseId = 5
                        });
                });

            modelBuilder.Entity("API.Entities.Scenario.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("Templates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "None"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Linear"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Branches"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sandbox"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Emerging"
                        });
                });

            modelBuilder.Entity("API.Entities.Scenario.Universe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("Universes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Initials = "DD",
                            Name = "Dungeons and dragons"
                        },
                        new
                        {
                            Id = 2,
                            Initials = "LR",
                            Name = "Lord of the rings"
                        },
                        new
                        {
                            Id = 3,
                            Initials = "SW",
                            Name = "Star wars - Clone wars"
                        },
                        new
                        {
                            Id = 4,
                            Initials = "SW",
                            Name = "Star wars - Rebels"
                        },
                        new
                        {
                            Id = 5,
                            Initials = "SW",
                            Name = "Star wars - The Great Sith's war"
                        },
                        new
                        {
                            Id = 6,
                            Initials = "SW",
                            Name = "Star wars - The old republic"
                        },
                        new
                        {
                            Id = 7,
                            Initials = "WH",
                            Name = "Warhammer"
                        },
                        new
                        {
                            Id = 8,
                            Initials = "WH",
                            Name = "Warhammer 40k - Dark Heresy"
                        });
                });

            modelBuilder.Entity("API.Entities.Character", b =>
                {
                    b.HasOne("API.Entities.Scenario.Scenario")
                        .WithMany("Characters")
                        .HasForeignKey("ScenarioId");
                });

            modelBuilder.Entity("API.Entities.Scenario.Scenario", b =>
                {
                    b.HasOne("API.Entities.Scenario.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("API.Entities.Scenario.Universe", "Universe")
                        .WithMany()
                        .HasForeignKey("UniverseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
